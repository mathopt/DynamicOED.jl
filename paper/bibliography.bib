@article{bezanson2017julia,
  title = {Julia: {{A Fresh Approach}} to {{Numerical Computing}}},
  shorttitle = {Julia},
  author = {Bezanson, Jeff and Edelman, Alan and Karpinski, Stefan and Shah, Viral B.},
  year = {2017},
  month = jan,
  journal = {SIAM Rev.},
  volume = {59},
  number = {1},
  pages = {65--98},
  publisher = {{Society for Industrial and Applied Mathematics}},
  issn = {0036-1445},
  doi = {10.1137/141000671},
  urldate = {2024-03-15},
  abstract = {JuMP is an open-source modeling language that allows users to express a wide range of optimization problems (linear, mixed-integer, quadratic, conic-quadratic, semidefinite, and nonlinear) in a high-level, algebraic syntax. JuMP takes advantage of advanced features of the Julia programming language to offer unique functionality while achieving performance on par with commercial modeling tools for standard tasks. In this work we will provide benchmarks, present the novel aspects of the implementation, and discuss how JuMP can be extended to new problem classes and composed with state-of-the-art tools for visualization and interactivity.},
}

@article{rackauckas2017,
  title = {{{DifferentialEquations}}.Jl -- a Performant and Feature-Rich Ecosystem for Solving Differential Equations in Julia},
  author = {Rackauckas, Christopher and Nie, Qing},
  year = {2017},
  journal = {The Journal of Open Research Software},
  volume = {5},
  number = {1},
  doi = {10.5334/jors.151},
  keywords = {Applied Mathematics},
}

@misc{vaibhav_kumar_dixit_2023_7738525,
  title = {Optimization.Jl: {{A}} Unified Optimization Package},
  author = {Dixit, Vaibhav Kumar and Rackauckas, Christopher},
  year = {2023},
  month = mar,
  doi = {10.5281/zenodo.7738525},
  howpublished = {Zenodo},
}

@phdthesis{Koerkel2002,
  title = {Numerische {{Methoden}} F{\"u}r {{Optimale Versuchsplanungsprobleme}} Bei Nichtlinearen {{DAE-Modellen}}},
  author = {K{\"o}rkel, S.},
  year = {2002},
  address = {{Heidelberg}},
  doi = {10.11588/heidok.00002980},
  school = {Universit{\"a}t Heidelberg},
  keywords = {agbock experimental design DAE},
}

@inproceedings{juniper,
  title = {Juniper: {{An Open-Source Nonlinear Branch-and-Bound Solver}} in {{Julia}}},
  shorttitle = {Juniper},
  booktitle = {Integration of {{Constraint Programming}}, {{Artificial Intelligence}}, and {{Operations Research}}},
  author = {Kr{\"o}ger, Ole and Coffrin, Carleton and Hijazi, Hassan and Nagarajan, Harsha},
  editor = {{van Hoeve}, Willem-Jan},
  year = {2018},
  pages = {377--386},
  publisher = {{Springer International Publishing}},
  address = {{Cham}},
  doi = {10.1007/978-3-319-93031-2_27},
  abstract = {Nonconvex mixed-integer nonlinear programs (MINLPs) represent a challenging class of optimization problems that often arise in engineering and scientific applications. Because of nonconvexities, these programs are typically solved with global optimization algorithms, which have limited scalability. However, nonlinear branch-and-bound has recently been shown to be an effective heuristic for quickly finding high-quality solutions to large-scale nonconvex MINLPs, such as those arising in infrastructure network optimization. This work proposes Juniper, a Julia-based open-source solver for nonlinear branch-and-bound. Leveraging the high-level Julia programming language makes it easy to modify Juniper's algorithm and explore extensions, such as branching heuristics, feasibility pumps, and parallelization. Detailed numerical experiments demonstrate that the initial release of Juniper is comparable with other nonlinear branch-and-bound solvers, such as Bonmin, Minotaur, and Knitro, illustrating that Juniper provides a strong foundation for further exploration in utilizing nonlinear branch-and-bound algorithms as heuristics for nonconvex MINLPs.},
  isbn = {978-3-319-93031-2},
  langid = {english},
}

@article{Li2000SensitivityAnalysisDifferential,
  title = {Sensitivity Analysis of {{Differential}}--{{Algebraic}} Equations: {{A}} Comparison of Methods on a Special Problem},
  shorttitle = {Sensitivity Analysis of {{Differential}}--{{Algebraic}} Equations},
  author = {Li, Shengtai and Petzold, Linda and Zhu, Wenjie},
  year = {2000},
  month = feb,
  journal = {Applied Numerical Mathematics},
  volume = {32},
  number = {2},
  pages = {161--174},
  issn = {0168-9274},
  doi = {10.1016/S0168-9274(99)00020-3},
  urldate = {2023-06-14},
  abstract = {We compare several methods for sensitivity analysis of differential--algebraic equations (DAEs). Computational complexity, efficiency and numerical conditioning issues are discussed. Numerical results for a chemical kinetics problem arising in model reduction are presented.},
  langid = {english},
  keywords = {Automatic differentiation,Differential\textendash algebraic equations,Sensitivity analysis},
}

@misc{ma2021modelingtoolkit,
  title = {{{ModelingToolkit}}: {{A Composable Graph Transformation System For Equation-Based Modeling}}},
  shorttitle = {{{ModelingToolkit}}},
  author = {Ma, Yingbo and Gowda, Shashi and Anantharaman, Ranjan and Laughman, Chris and Shah, Viral and Rackauckas, Chris},
  year = {2022},
  month = feb,
  number = {arXiv:2103.05244},
  eprint = {2103.05244},
  primaryclass = {cs},
  publisher = {{arXiv}},
  doi = {10.48550/arXiv.2103.05244},
  urldate = {2024-03-15},
  abstract = {Getting good performance out of numerical equation solvers requires that the user has provided stable and efficient functions representing their model. However, users should not be trusted to write good code. In this manuscript we describe ModelingToolkit (MTK), a symbolic equation-based modeling system which allows for composable transformations to generate stable, efficient, and parallelized model implementations. MTK blurs the lines of traditional symbolic computing by acting directly on a user's numerical code. We show the ability to apply graph algorithms for automatically parallelizing and performing index reduction on code written for differential-algebraic equation (DAE) solvers, "fixing" the performance and stability of the model without requiring any changes to on the user's part. We demonstrate how composable model transformations can be combined with automated data-driven surrogate generation techniques, allowing machine learning methods to generate accelerated approximate models within an acausal modeling framework. These reduced models are shown to outperform the Dymola Modelica compiler on an HVAC model by 590x at 3{\textbackslash}\% error. Together, this demonstrates MTK as a system for bringing the latest research in graph transformations directly to modeling applications.},
  archiveprefix = {arxiv},
}

@article{Sager2013,
  title = {Sampling {{Decisions}} in {{Optimum Experimental Design}} in the {{Light}} of {{Pontryagin}}'s {{Maximum Principle}}},
  author = {Sager, Sebastian},
  year = {2013},
  month = jan,
  journal = {SIAM J. Control Optim.},
  volume = {51},
  number = {4},
  pages = {3181--3207},
  issn = {0363-0129, 1095-7138},
  doi = {10.1137/110835098},
  urldate = {2023-11-06},
  abstract = {Optimum experimental design (OED) problems are optimization problems in which an experimental setting and decisions on when to measure---the so-called sampling design---are to be determined such that a follow-up parameter estimation yields accurate results for model parameters. In this paper we use the interpretation of OED as optimal control problems with a very particular structure for the analysis of optimal sampling decisions. We introduce the information gain function, motivated by an analysis of necessary conditions of optimality. We highlight differences between problem formulations and propose to use a linear penalization of sampling decisions to overcome the intrinsic ill-conditioning of OED. The results of this paper are independent from the actual numerical method to compute the solution to the OED problem and of the question of local and global optima.},
  langid = {english},
  keywords = {agbock,experimental design,mathopt,miocmathopt,mlmathopt,optimal control},
}

@article{Waechter2006,
  title = {On the {{Implementation}} of an {{Interior-Point Filter Line-Search Algorithm}} for {{Large-Scale Nonlinear Programming}}},
  author = {W{\"a}chter, A. and Biegler, L.T.},
  year = {2006},
  journal = {Mathematical Programming},
  volume = {106},
  number = {1},
  pages = {25--57},
  doi = {10.1007/s10107-004-0559-y},
  journal-iso = {Math. Program.},
  keywords = {interior point},
}
